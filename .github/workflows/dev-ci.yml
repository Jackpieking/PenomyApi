name: dev-ci

on:
    pull_request:
        branches: ["dev"]

jobs:
    build:
        name: Build the project
        runs-on: self-hosted

        env:
            DOTNET_INSTALL_DIR: "dotnet-sdk"
            DOTNET_ROOT: "dotnet-sdk"
            NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages
            DOTNET_CLI_TELEMETRY_OPTOUT: 1

        steps:
            # Load source code from the branch that has the new PR
            # In this case, it is the source code of dev branch
            - name: Checkout to the source code
              uses: actions/checkout@v4

            # Compute hash values of sdk
            #
            # Runtime hash is used to cache the dotnet installation
            # App infra dependencies hash is used to cache app infra dependencies
            - name: Compute hash values
              id: compute-hashes
              run: |
                  echo "runtime_hash=$(git ls-files | grep 'global.json' | xargs sha256sum | cut -d' ' -f1)" >> $GITHUB_OUTPUT

                  echo "app_infra_dependencies_hash=$(find src/External/Infrastructure -type f -name "*.csproj" -exec sha256sum {} + | sha256sum | cut -d' ' -f1)" >> $GITHUB_OUTPUT

            # Cache sdk and runtime
            - name: Cache dotnet installation
              id: cache-runtime
              uses: actions/cache@v4
              with:
                  key: ${{ runner.os }}-dotnet--sdk-${{ steps.compute-hashes.outputs.runtime_hash }}

                  restore-keys: ${{ runner.os }}-dotnet--sdk-${{ steps.compute-hashes.outputs.runtime_hash }}

                  path: ${{ env.DOTNET_INSTALL_DIR }}

            # Cache app infra dependencies
            - name: Cache app infrastructure dependencies
              id: cache-app-infra-dependencies
              uses: actions/cache@v4
              with:
                  key: ${{ runner.os }}-dotnet--nuget-app-infra-${{ steps.compute-hashes.outputs.app_infra_dependencies_hash }}

                  restore-keys: ${{ runner.os }}-dotnet--nuget-app-infra-${{ steps.compute-hashes.outputs.app_infra_dependencies_hash }}

                  path: ${{ env.NUGET_PACKAGES }}

            # Install dotnet sdk
            # If dotnet sdk is not found in cache
            #
            # This step would be skipped if cache is hit
            - name: Setup dotnet installation
              uses: actions/setup-dotnet@v4
              with:
                  global-json-file: global.json

            # Restore dependencies of the project
            - name: Restore dependencies
              run: dotnet restore

            # Build the project
            - name: Build app
              run: dotnet build --no-restore -c Release
